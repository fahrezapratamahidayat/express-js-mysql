// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum PeranTamu {
  Admin
  Pengguna
}

model Tamu {
  idTamu           Int          @id @default(autoincrement())
  namaTamu         String       @db.VarChar(255)
  emailTamu        String       @db.VarChar(255)
  jenisKelamin     String       @db.Char(20)
  umurTamu         Int          @default(0)
  nomorTeleponTamu String       @unique @db.VarChar(15)
  provinsi         String       @db.VarChar(100)
  kota             String       @db.VarChar(100)
  kecamatan        String       @db.VarChar(100)
  kelurahan        String       @db.VarChar(20)
  kataSandi        String
  peranTamu        PeranTamu    @default(Pengguna)
  statusTamu       String
  pekerjaan        String
  tanggalDibuat    DateTime     @default(now())
  tanggalDiupdate  DateTime     @default(now())
  Reservasi        Reservasi[]
  Pembayaran       Pembayaran[]
  Komentar         Komentar[]
}

enum StatusKamar {
  Tersedia
  TidakTersedia
  Dipesan
  SedangDiperbaiki
  Lainnya
}

model Kamar {
  idKamar         Int         @id @default(autoincrement())
  namaKamar       String      @db.VarChar(255)
  ukuranKamar     String      @db.VarChar(100)
  deskripsiKamar  String      @db.VarChar(255)
  hargaKamar      Float       @default(0) @db.Float
  tipeKamar       TipeKamar
  ratingKamar     Float       @db.Float
  diskonKamar     Float       @db.Float
  statusKamar     StatusKamar @default(Tersedia)
  tanggalDibuat   DateTime    @default(now())
  tanggalDiupdate DateTime    @default(now())
  Gambar          Gambar[]
  Reservasi       Reservasi[]
  Komentar        Komentar[]

  @@map("kamar")
}

enum TipeKamar {
  Standar
  Deluxe
  Suite
  Premium
}

model Gambar {
  idGambar   Int    @id @default(autoincrement())
  namaGambar String @db.VarChar(255)
  urlGambar  String @db.VarChar(255)
  idKamar    Int
  kamar      Kamar  @relation(fields: [idKamar], references: [idKamar], onDelete: Cascade)

  @@map("gambar")
}

enum JenisReservasi {
  Pemesanan
  Reservasi
  Lainnya
}

enum StatusReservasi {
  Menunggu
  Diterima
  Ditolak
}

model Reservasi {
  idReservasi     Int             @id @default(autoincrement())
  idKamar         Int
  idTamu          Int
  idPembayaran    Int?            @unique
  tanggalCheckIn  DateTime
  tanggalCheckOut DateTime
  durasiMenginap  Int             @default(1)
  statusReservasi StatusReservasi @default(Menunggu) // Menggunakan enum untuk status reservasi
  jenisReservasi  JenisReservasi  @default(Reservasi)
  jumlahTamu      Int             @default(1)
  permintaanTamu  String?
  kamar           Kamar           @relation(fields: [idKamar], references: [idKamar], onDelete: Cascade)
  tamu            Tamu            @relation(fields: [idTamu], references: [idTamu], onDelete: Cascade)
  Pembayaran      Pembayaran?

  @@map("reservasi")
}

model Pembayaran {
  idPembayaran     Int       @id @default(autoincrement())
  idTamu           Int
  idReservasi      Int       @unique
  jumlahBayar      Float     @db.Float
  tanggalBayar     DateTime  @default(now())
  batasWaktuBayar  DateTime
  metodePembayaran String    @db.VarChar(50)
  statusPembayaran String    @db.VarChar(50)
  tamu             Tamu      @relation(fields: [idTamu], references: [idTamu], onDelete: Cascade)
  reservasi        Reservasi @relation(fields: [idReservasi], references: [idReservasi], onDelete: Cascade)

  @@map("pembayaran")
}

enum TipeKomentar {
  Kamar
  Hotel
}

model Komentar {
  idKomentar    Int          @id @default(autoincrement())
  idTamu        Int
  idKamar       Int
  TipeKomentar  TipeKomentar @default(Kamar)
  jumlahLike    Int          @default(0)
  Komentar      String
  tanggalDibuat DateTime     @default(now())
  tamu          Tamu         @relation(fields: [idTamu], references: [idTamu], onDelete: Cascade)
  kamar         Kamar        @relation(fields: [idKamar], references: [idKamar], onDelete: Cascade)
}
